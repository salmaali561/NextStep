// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NextStep.EF.Data;

#nullable disable

namespace NextStep.EF.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250502001247_indexingForApp")]
    partial class indexingForApp
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("NextStep.Core.Models.Application", b =>
                {
                    b.Property<int>("ApplicationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicationID"));

                    b.Property<int>("ApplicationTypeID")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileUpload")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDone")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("StepID")
                        .HasColumnType("int");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.HasKey("ApplicationID");

                    b.HasIndex("ApplicationTypeID")
                        .HasDatabaseName("IX_Application_ApplicationTypeID");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("Status")
                        .HasDatabaseName("IX_Application_Status");

                    b.HasIndex("StepID");

                    b.HasIndex("StudentID");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("NextStep.Core.Models.ApplicationHistory", b =>
                {
                    b.Property<int>("HistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoryID"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ActionByDeptId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ActionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApplicationID")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HistoryID");

                    b.HasIndex("ActionByDeptId");

                    b.HasIndex("ApplicationID");

                    b.ToTable("ApplicationHistories");
                });

            modelBuilder.Entity("NextStep.Core.Models.ApplicationType", b =>
                {
                    b.Property<int>("ApplicationTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicationTypeID"));

                    b.Property<string>("ApplicationTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedByDeptId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ApplicationTypeID");

                    b.HasIndex("CreatedByDeptId");

                    b.ToTable("ApplicationTypes");
                });

            modelBuilder.Entity("NextStep.Core.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("NextStep.Core.Models.Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentID"));

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentID");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("NextStep.Core.Models.Employee", b =>
                {
                    b.Property<int>("EmpID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpID"));

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("EmpID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("UserId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("NextStep.Core.Models.Requierments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RequiermentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Requierments");
                });

            modelBuilder.Entity("NextStep.Core.Models.RequiermentsApplicationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApplicationTypeId")
                        .HasColumnType("int");

                    b.Property<int>("RequiermentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationTypeId");

                    b.HasIndex("RequiermentId");

                    b.ToTable("RequiermentsApplicationTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApplicationTypeId = 1,
                            RequiermentId = 1
                        },
                        new
                        {
                            Id = 2,
                            ApplicationTypeId = 1,
                            RequiermentId = 2
                        },
                        new
                        {
                            Id = 3,
                            ApplicationTypeId = 1,
                            RequiermentId = 3
                        },
                        new
                        {
                            Id = 4,
                            ApplicationTypeId = 1,
                            RequiermentId = 4
                        },
                        new
                        {
                            Id = 5,
                            ApplicationTypeId = 2,
                            RequiermentId = 1
                        },
                        new
                        {
                            Id = 6,
                            ApplicationTypeId = 2,
                            RequiermentId = 2
                        },
                        new
                        {
                            Id = 7,
                            ApplicationTypeId = 2,
                            RequiermentId = 3
                        },
                        new
                        {
                            Id = 8,
                            ApplicationTypeId = 2,
                            RequiermentId = 4
                        },
                        new
                        {
                            Id = 9,
                            ApplicationTypeId = 3,
                            RequiermentId = 1
                        },
                        new
                        {
                            Id = 10,
                            ApplicationTypeId = 3,
                            RequiermentId = 2
                        },
                        new
                        {
                            Id = 11,
                            ApplicationTypeId = 3,
                            RequiermentId = 3
                        },
                        new
                        {
                            Id = 12,
                            ApplicationTypeId = 3,
                            RequiermentId = 4
                        },
                        new
                        {
                            Id = 13,
                            ApplicationTypeId = 4,
                            RequiermentId = 1
                        },
                        new
                        {
                            Id = 14,
                            ApplicationTypeId = 4,
                            RequiermentId = 2
                        },
                        new
                        {
                            Id = 15,
                            ApplicationTypeId = 4,
                            RequiermentId = 3
                        },
                        new
                        {
                            Id = 16,
                            ApplicationTypeId = 4,
                            RequiermentId = 4
                        },
                        new
                        {
                            Id = 17,
                            ApplicationTypeId = 17,
                            RequiermentId = 5
                        },
                        new
                        {
                            Id = 18,
                            ApplicationTypeId = 17,
                            RequiermentId = 6
                        },
                        new
                        {
                            Id = 19,
                            ApplicationTypeId = 17,
                            RequiermentId = 7
                        },
                        new
                        {
                            Id = 20,
                            ApplicationTypeId = 18,
                            RequiermentId = 5
                        },
                        new
                        {
                            Id = 21,
                            ApplicationTypeId = 18,
                            RequiermentId = 6
                        },
                        new
                        {
                            Id = 22,
                            ApplicationTypeId = 18,
                            RequiermentId = 7
                        },
                        new
                        {
                            Id = 23,
                            ApplicationTypeId = 19,
                            RequiermentId = 5
                        },
                        new
                        {
                            Id = 24,
                            ApplicationTypeId = 19,
                            RequiermentId = 6
                        },
                        new
                        {
                            Id = 25,
                            ApplicationTypeId = 19,
                            RequiermentId = 7
                        },
                        new
                        {
                            Id = 26,
                            ApplicationTypeId = 20,
                            RequiermentId = 5
                        },
                        new
                        {
                            Id = 27,
                            ApplicationTypeId = 20,
                            RequiermentId = 6
                        },
                        new
                        {
                            Id = 28,
                            ApplicationTypeId = 20,
                            RequiermentId = 7
                        },
                        new
                        {
                            Id = 29,
                            ApplicationTypeId = 21,
                            RequiermentId = 8
                        },
                        new
                        {
                            Id = 30,
                            ApplicationTypeId = 21,
                            RequiermentId = 9
                        },
                        new
                        {
                            Id = 31,
                            ApplicationTypeId = 22,
                            RequiermentId = 8
                        },
                        new
                        {
                            Id = 32,
                            ApplicationTypeId = 22,
                            RequiermentId = 9
                        },
                        new
                        {
                            Id = 33,
                            ApplicationTypeId = 23,
                            RequiermentId = 8
                        },
                        new
                        {
                            Id = 34,
                            ApplicationTypeId = 23,
                            RequiermentId = 9
                        },
                        new
                        {
                            Id = 35,
                            ApplicationTypeId = 24,
                            RequiermentId = 8
                        },
                        new
                        {
                            Id = 36,
                            ApplicationTypeId = 24,
                            RequiermentId = 9
                        },
                        new
                        {
                            Id = 37,
                            ApplicationTypeId = 5,
                            RequiermentId = 10
                        },
                        new
                        {
                            Id = 38,
                            ApplicationTypeId = 5,
                            RequiermentId = 11
                        },
                        new
                        {
                            Id = 39,
                            ApplicationTypeId = 6,
                            RequiermentId = 10
                        },
                        new
                        {
                            Id = 40,
                            ApplicationTypeId = 6,
                            RequiermentId = 11
                        },
                        new
                        {
                            Id = 41,
                            ApplicationTypeId = 7,
                            RequiermentId = 10
                        },
                        new
                        {
                            Id = 42,
                            ApplicationTypeId = 7,
                            RequiermentId = 11
                        },
                        new
                        {
                            Id = 43,
                            ApplicationTypeId = 8,
                            RequiermentId = 10
                        },
                        new
                        {
                            Id = 44,
                            ApplicationTypeId = 8,
                            RequiermentId = 11
                        },
                        new
                        {
                            Id = 45,
                            ApplicationTypeId = 25,
                            RequiermentId = 12
                        },
                        new
                        {
                            Id = 46,
                            ApplicationTypeId = 25,
                            RequiermentId = 13
                        },
                        new
                        {
                            Id = 47,
                            ApplicationTypeId = 25,
                            RequiermentId = 14
                        },
                        new
                        {
                            Id = 48,
                            ApplicationTypeId = 25,
                            RequiermentId = 15
                        },
                        new
                        {
                            Id = 49,
                            ApplicationTypeId = 25,
                            RequiermentId = 16
                        },
                        new
                        {
                            Id = 50,
                            ApplicationTypeId = 25,
                            RequiermentId = 17
                        },
                        new
                        {
                            Id = 51,
                            ApplicationTypeId = 25,
                            RequiermentId = 18
                        },
                        new
                        {
                            Id = 52,
                            ApplicationTypeId = 26,
                            RequiermentId = 12
                        },
                        new
                        {
                            Id = 53,
                            ApplicationTypeId = 26,
                            RequiermentId = 13
                        },
                        new
                        {
                            Id = 54,
                            ApplicationTypeId = 26,
                            RequiermentId = 14
                        },
                        new
                        {
                            Id = 55,
                            ApplicationTypeId = 26,
                            RequiermentId = 15
                        },
                        new
                        {
                            Id = 56,
                            ApplicationTypeId = 26,
                            RequiermentId = 16
                        },
                        new
                        {
                            Id = 57,
                            ApplicationTypeId = 26,
                            RequiermentId = 17
                        },
                        new
                        {
                            Id = 58,
                            ApplicationTypeId = 26,
                            RequiermentId = 18
                        },
                        new
                        {
                            Id = 59,
                            ApplicationTypeId = 27,
                            RequiermentId = 12
                        },
                        new
                        {
                            Id = 60,
                            ApplicationTypeId = 27,
                            RequiermentId = 13
                        },
                        new
                        {
                            Id = 61,
                            ApplicationTypeId = 27,
                            RequiermentId = 14
                        },
                        new
                        {
                            Id = 62,
                            ApplicationTypeId = 27,
                            RequiermentId = 15
                        },
                        new
                        {
                            Id = 63,
                            ApplicationTypeId = 27,
                            RequiermentId = 16
                        },
                        new
                        {
                            Id = 64,
                            ApplicationTypeId = 27,
                            RequiermentId = 17
                        },
                        new
                        {
                            Id = 65,
                            ApplicationTypeId = 27,
                            RequiermentId = 18
                        },
                        new
                        {
                            Id = 66,
                            ApplicationTypeId = 28,
                            RequiermentId = 12
                        },
                        new
                        {
                            Id = 67,
                            ApplicationTypeId = 28,
                            RequiermentId = 13
                        },
                        new
                        {
                            Id = 68,
                            ApplicationTypeId = 28,
                            RequiermentId = 14
                        },
                        new
                        {
                            Id = 69,
                            ApplicationTypeId = 28,
                            RequiermentId = 15
                        },
                        new
                        {
                            Id = 70,
                            ApplicationTypeId = 28,
                            RequiermentId = 16
                        },
                        new
                        {
                            Id = 71,
                            ApplicationTypeId = 28,
                            RequiermentId = 17
                        },
                        new
                        {
                            Id = 72,
                            ApplicationTypeId = 28,
                            RequiermentId = 18
                        },
                        new
                        {
                            Id = 73,
                            ApplicationTypeId = 9,
                            RequiermentId = 19
                        },
                        new
                        {
                            Id = 74,
                            ApplicationTypeId = 9,
                            RequiermentId = 20
                        },
                        new
                        {
                            Id = 75,
                            ApplicationTypeId = 33,
                            RequiermentId = 21
                        },
                        new
                        {
                            Id = 76,
                            ApplicationTypeId = 33,
                            RequiermentId = 22
                        },
                        new
                        {
                            Id = 77,
                            ApplicationTypeId = 33,
                            RequiermentId = 23
                        },
                        new
                        {
                            Id = 78,
                            ApplicationTypeId = 13,
                            RequiermentId = 24
                        },
                        new
                        {
                            Id = 79,
                            ApplicationTypeId = 13,
                            RequiermentId = 25
                        },
                        new
                        {
                            Id = 80,
                            ApplicationTypeId = 13,
                            RequiermentId = 26
                        },
                        new
                        {
                            Id = 81,
                            ApplicationTypeId = 13,
                            RequiermentId = 27
                        },
                        new
                        {
                            Id = 82,
                            ApplicationTypeId = 13,
                            RequiermentId = 28
                        },
                        new
                        {
                            Id = 83,
                            ApplicationTypeId = 13,
                            RequiermentId = 29
                        },
                        new
                        {
                            Id = 84,
                            ApplicationTypeId = 14,
                            RequiermentId = 24
                        },
                        new
                        {
                            Id = 85,
                            ApplicationTypeId = 14,
                            RequiermentId = 25
                        },
                        new
                        {
                            Id = 86,
                            ApplicationTypeId = 14,
                            RequiermentId = 26
                        },
                        new
                        {
                            Id = 87,
                            ApplicationTypeId = 14,
                            RequiermentId = 27
                        },
                        new
                        {
                            Id = 88,
                            ApplicationTypeId = 14,
                            RequiermentId = 28
                        },
                        new
                        {
                            Id = 89,
                            ApplicationTypeId = 14,
                            RequiermentId = 29
                        },
                        new
                        {
                            Id = 90,
                            ApplicationTypeId = 15,
                            RequiermentId = 24
                        },
                        new
                        {
                            Id = 91,
                            ApplicationTypeId = 15,
                            RequiermentId = 25
                        },
                        new
                        {
                            Id = 92,
                            ApplicationTypeId = 15,
                            RequiermentId = 26
                        },
                        new
                        {
                            Id = 93,
                            ApplicationTypeId = 15,
                            RequiermentId = 27
                        },
                        new
                        {
                            Id = 94,
                            ApplicationTypeId = 15,
                            RequiermentId = 28
                        },
                        new
                        {
                            Id = 95,
                            ApplicationTypeId = 15,
                            RequiermentId = 29
                        },
                        new
                        {
                            Id = 96,
                            ApplicationTypeId = 16,
                            RequiermentId = 24
                        },
                        new
                        {
                            Id = 97,
                            ApplicationTypeId = 16,
                            RequiermentId = 25
                        },
                        new
                        {
                            Id = 98,
                            ApplicationTypeId = 16,
                            RequiermentId = 26
                        },
                        new
                        {
                            Id = 99,
                            ApplicationTypeId = 16,
                            RequiermentId = 27
                        },
                        new
                        {
                            Id = 100,
                            ApplicationTypeId = 16,
                            RequiermentId = 28
                        },
                        new
                        {
                            Id = 101,
                            ApplicationTypeId = 16,
                            RequiermentId = 29
                        },
                        new
                        {
                            Id = 102,
                            ApplicationTypeId = 39,
                            RequiermentId = 24
                        },
                        new
                        {
                            Id = 103,
                            ApplicationTypeId = 39,
                            RequiermentId = 25
                        },
                        new
                        {
                            Id = 104,
                            ApplicationTypeId = 39,
                            RequiermentId = 26
                        },
                        new
                        {
                            Id = 105,
                            ApplicationTypeId = 39,
                            RequiermentId = 27
                        },
                        new
                        {
                            Id = 106,
                            ApplicationTypeId = 39,
                            RequiermentId = 28
                        },
                        new
                        {
                            Id = 107,
                            ApplicationTypeId = 39,
                            RequiermentId = 29
                        },
                        new
                        {
                            Id = 108,
                            ApplicationTypeId = 40,
                            RequiermentId = 24
                        },
                        new
                        {
                            Id = 109,
                            ApplicationTypeId = 40,
                            RequiermentId = 25
                        },
                        new
                        {
                            Id = 110,
                            ApplicationTypeId = 40,
                            RequiermentId = 26
                        },
                        new
                        {
                            Id = 111,
                            ApplicationTypeId = 40,
                            RequiermentId = 27
                        },
                        new
                        {
                            Id = 112,
                            ApplicationTypeId = 40,
                            RequiermentId = 28
                        },
                        new
                        {
                            Id = 113,
                            ApplicationTypeId = 40,
                            RequiermentId = 29
                        },
                        new
                        {
                            Id = 114,
                            ApplicationTypeId = 41,
                            RequiermentId = 24
                        },
                        new
                        {
                            Id = 115,
                            ApplicationTypeId = 41,
                            RequiermentId = 25
                        },
                        new
                        {
                            Id = 116,
                            ApplicationTypeId = 41,
                            RequiermentId = 26
                        },
                        new
                        {
                            Id = 117,
                            ApplicationTypeId = 41,
                            RequiermentId = 27
                        },
                        new
                        {
                            Id = 118,
                            ApplicationTypeId = 41,
                            RequiermentId = 28
                        },
                        new
                        {
                            Id = 119,
                            ApplicationTypeId = 41,
                            RequiermentId = 29
                        },
                        new
                        {
                            Id = 120,
                            ApplicationTypeId = 42,
                            RequiermentId = 24
                        },
                        new
                        {
                            Id = 121,
                            ApplicationTypeId = 42,
                            RequiermentId = 25
                        },
                        new
                        {
                            Id = 122,
                            ApplicationTypeId = 42,
                            RequiermentId = 26
                        },
                        new
                        {
                            Id = 123,
                            ApplicationTypeId = 42,
                            RequiermentId = 27
                        },
                        new
                        {
                            Id = 124,
                            ApplicationTypeId = 42,
                            RequiermentId = 28
                        },
                        new
                        {
                            Id = 125,
                            ApplicationTypeId = 42,
                            RequiermentId = 29
                        });
                });

            modelBuilder.Entity("NextStep.Core.Models.Steps", b =>
                {
                    b.Property<int>("StepsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StepsID"));

                    b.Property<int>("ApplicationTypeID")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int>("StepOrder")
                        .HasColumnType("int");

                    b.HasKey("StepsID");

                    b.HasIndex("ApplicationTypeID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Steps");
                });

            modelBuilder.Entity("NextStep.Core.Models.Student", b =>
                {
                    b.Property<int>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentID"));

                    b.Property<string>("Naid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("StudentID");

                    b.HasIndex("UserId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("NextStep.Core.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("NextStep.Core.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NextStep.Core.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("NextStep.Core.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NextStep.Core.Models.Application", b =>
                {
                    b.HasOne("NextStep.Core.Models.ApplicationType", "ApplicationType")
                        .WithMany("Applications")
                        .HasForeignKey("ApplicationTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NextStep.Core.Models.Employee", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NextStep.Core.Models.Steps", "Steps")
                        .WithMany("Applications")
                        .HasForeignKey("StepID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NextStep.Core.Models.Student", "Student")
                        .WithMany("Applications")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationType");

                    b.Navigation("CreatedByUser");

                    b.Navigation("Steps");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("NextStep.Core.Models.ApplicationHistory", b =>
                {
                    b.HasOne("NextStep.Core.Models.Department", "Department")
                        .WithMany("ApplicationHistories")
                        .HasForeignKey("ActionByDeptId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NextStep.Core.Models.Application", "Application")
                        .WithMany("ApplicationHistories")
                        .HasForeignKey("ApplicationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("NextStep.Core.Models.ApplicationType", b =>
                {
                    b.HasOne("NextStep.Core.Models.Department", "Department")
                        .WithMany("ApplicationTypes")
                        .HasForeignKey("CreatedByDeptId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Department");
                });

            modelBuilder.Entity("NextStep.Core.Models.Employee", b =>
                {
                    b.HasOne("NextStep.Core.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NextStep.Core.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NextStep.Core.Models.RequiermentsApplicationType", b =>
                {
                    b.HasOne("NextStep.Core.Models.ApplicationType", "ApplicationType")
                        .WithMany("Requierments")
                        .HasForeignKey("ApplicationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NextStep.Core.Models.Requierments", "Requierment")
                        .WithMany()
                        .HasForeignKey("RequiermentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationType");

                    b.Navigation("Requierment");
                });

            modelBuilder.Entity("NextStep.Core.Models.Steps", b =>
                {
                    b.HasOne("NextStep.Core.Models.ApplicationType", "ApplicationType")
                        .WithMany("Steps")
                        .HasForeignKey("ApplicationTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NextStep.Core.Models.Department", "Department")
                        .WithMany("Steps")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ApplicationType");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("NextStep.Core.Models.Student", b =>
                {
                    b.HasOne("NextStep.Core.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("NextStep.Core.Models.Application", b =>
                {
                    b.Navigation("ApplicationHistories");
                });

            modelBuilder.Entity("NextStep.Core.Models.ApplicationType", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("Requierments");

                    b.Navigation("Steps");
                });

            modelBuilder.Entity("NextStep.Core.Models.Department", b =>
                {
                    b.Navigation("ApplicationHistories");

                    b.Navigation("ApplicationTypes");

                    b.Navigation("Employees");

                    b.Navigation("Steps");
                });

            modelBuilder.Entity("NextStep.Core.Models.Steps", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("NextStep.Core.Models.Student", b =>
                {
                    b.Navigation("Applications");
                });
#pragma warning restore 612, 618
        }
    }
}
